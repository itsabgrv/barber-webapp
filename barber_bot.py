from telegram import Update, WebAppInfo, MenuButtonWebApp
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
from datetime import datetime
import json

# –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É üíà *–ó–∞–ø–∏—Å–∞—Ç—å—Å—è* –≤ –ª–µ–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª—É.",
        parse_mode="Markdown"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ WebApp –¥–∞–Ω–Ω—ã—Ö
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.web_app_data:
        try:
            data = json.loads(update.message.web_app_data.data)
            specialist = data.get("specialist", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            date_str = data.get("date", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            time_str = data.get("time", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")

            # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
            try:
                date_obj = datetime.strptime(date_str, "%Y-%m-%d")
                weekdays = {
                    "Monday": "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫",
                    "Tuesday": "–í—Ç–æ—Ä–Ω–∏–∫",
                    "Wednesday": "–°—Ä–µ–¥–∞",
                    "Thursday": "–ß–µ—Ç–≤–µ—Ä–≥",
                    "Friday": "–ü—è—Ç–Ω–∏—Ü–∞",
                    "Saturday": "–°—É–±–±–æ—Ç–∞",
                    "Sunday": "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ",
                }
                formatted_date = weekdays[date_obj.strftime("%A")] + " " + date_obj.strftime("%d.%m.%Y")
            except:
                formatted_date = date_str

            message = (
                f"–ú–æ–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è üôåüèΩ –í—ã –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ *{formatted_date}* –≤ *{time_str}* ‚úÖ\n"
                f"–ú–∞—Å—Ç–µ—Ä: *{specialist}*\n\n"
                f"*–ü—Ä–∞–≤–∏–ª–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è:*\n"
                f" - –º—ã —Ü–µ–Ω–∏–º –≤—Ä–µ–º—è –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –Ω–∞–∫–ª–∞–¥–æ–∫ –±–æ–ª—å—à–∞—è –ø—Ä–æ—Å—å–±–∞ –Ω–µ –æ–ø–∞–∑–¥—ã–≤–∞—Ç—å. "
                f"–ü–æ—Å–ª–µ –∑–∞–¥–µ—Ä–∂–∫–∏ –±–æ–ª–µ–µ 20 –º–∏–Ω—É—Ç –º–∞—Å—Ç–µ—Ä –Ω–µ —Å–º–æ–∂–µ—Ç –≤–∞—Å –ø—Ä–∏–Ω—è—Ç—å.\n"
                f" - –µ—Å–ª–∏ –≤—ã –≤—Å–µ –∂–µ –ø–æ–Ω—è–ª–∏, —á—Ç–æ –Ω–µ —É—Å–ø–µ–≤–∞–µ—Ç–µ ‚Äî –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–º–µ–Ω–∏—Ç–µ –∑–∞–ø–∏—Å—å –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É ¬´–∑–∞–ø–∏—Å–∞—Ç—å—Å—è¬ª."
            )

            await update.message.reply_text(message, parse_mode="Markdown")
        except Exception as e:
            await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø–∏—Å–∏.")
    else:
        await update.message.reply_text("–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É üíà *–ó–∞–ø–∏—Å–∞—Ç—å—Å—è* —Å–ª–µ–≤–∞ –≤–Ω–∏–∑—É.", parse_mode="Markdown")

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ WebApp –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é
async def setup_webapp_menu_button(app):
    await app.bot.set_chat_menu_button(
        menu_button=MenuButtonWebApp(
            text="üíà –ó–∞–ø–∏—Å–∞—Ç—å—Å—è",
            web_app=WebAppInfo(url="https://barber-indol-iota.vercel.app/")
        )
    )

# –ó–∞–ø—É—Å–∫
def main():
    TOKEN = "8112562910:AAHXA_yu1OEB-JG3Lzdxje0g8-LWyprOslI"
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.post_init = setup_webapp_menu_button

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()
