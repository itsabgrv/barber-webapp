from telegram import Update, WebAppInfo, MenuButtonWebApp
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import json

# –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ó–∞–ø–∏—Å–∞—Ç—å—Å—è¬ª –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ WebApp
async def handle_webapp_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print("üîî handle_webapp_data –≤—ã–∑–≤–∞–Ω!")
    print(update.message.web_app_data.data)

    if update.message.web_app_data:
        print("‚úÖ –ù–∞–π–¥–µ–Ω—ã web_app_data:", update.message.web_app_data.data)

        try:
            data = json.loads(update.message.web_app_data.data)
            print("üì¶ –†–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", data)

            # –î–æ—Å—Ç–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è
            date = data.get("date", "–Ω–µ —É–∫–∞–∑–∞–Ω–æ")
            time = data.get("time", "–Ω–µ —É–∫–∞–∑–∞–Ω–æ")
            specialist = data.get("specialist", "–Ω–µ —É–∫–∞–∑–∞–Ω")
            name = data.get("name", "–Ω–µ —É–∫–∞–∑–∞–Ω–æ")
            phone = data.get("phone", "–Ω–µ —É–∫–∞–∑–∞–Ω–æ")
            services = data.get("services", [])
            branch = data.get("branch", "–Ω–µ —É–∫–∞–∑–∞–Ω")

            services_text = "\n".join(
                f"‚Äî {s['title']} ({s['price']} ‚Ç∏)" for s in services
            ) if services else "‚Äî —É—Å–ª—É–≥–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã"

            message = (
                f"–ú–æ–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è üôåüèΩ –í—ã –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ {date} –≤ {time} ‚úÖ\n"
                f"–ú–∞—Å—Ç–µ—Ä: {specialist}\n\n"
                f"–ü—Ä–∞–≤–∏–ª–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è:\n"
                " - –º—ã —Ü–µ–Ω–∏–º –≤—Ä–µ–º—è –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –Ω–∞–∫–ª–∞–¥–æ–∫ –±–æ–ª—å—à–∞—è –ø—Ä–æ—Å—å–±–∞ –Ω–µ –æ–ø–∞–∑–¥—ã–≤–∞—Ç—å.\n"
                " - –ü–æ—Å–ª–µ –∑–∞–¥–µ—Ä–∂–∫–∏ –±–æ–ª–µ–µ 20 –º–∏–Ω—É—Ç –º–∞—Å—Ç–µ—Ä –Ω–µ —Å–º–æ–∂–µ—Ç –≤–∞—Å –ø—Ä–∏–Ω—è—Ç—å.\n"
                " - –µ—Å–ª–∏ –≤—ã –≤—Å–µ –∂–µ –ø–æ–Ω—è–ª–∏, —á—Ç–æ –Ω–µ —É—Å–ø–µ–≤–∞–µ—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç–º–µ–Ω–∏—Ç–µ –∑–∞–ø–∏—Å—å –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É ¬´–∑–∞–ø–∏—Å–∞—Ç—å—Å—è¬ª"
            )

            await update.message.reply_text(message, parse_mode="Markdown")

        except Exception as e:
            print("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö:", e)
            await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö.")
    else:
        print("‚ö†Ô∏è –ù–µ—Ç web_app_data.")
        await update.message.reply_text("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ—Ç WebApp.")



# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–Ω–æ–ø–∫–∏ WebApp –≤ Telegram –º–µ–Ω—é
async def setup_webapp_menu_button(app):
    await app.bot.set_chat_menu_button(
        menu_button=MenuButtonWebApp(
            text="üíà –ó–∞–ø–∏—Å–∞—Ç—å—Å—è",
            web_app=WebAppInfo(url="https://barber-webapp-git-main-adams-projects-62b06f32.vercel.app")
        )
    )

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    TOKEN = "8112562910:AAHXA_yu1OEB-JG3Lzdxje0g8-LWyprOslI"
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_webapp_data))
    app.post_init = setup_webapp_menu_button

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()
