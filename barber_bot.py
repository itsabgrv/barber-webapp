from telegram import Update, WebAppInfo, MenuButtonWebApp
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import json

# –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ó–∞–ø–∏—Å–∞—Ç—å—Å—è¬ª –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ WebApp
async def handle_webapp_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        print("–ü–æ–ª—É—á–µ–Ω—ã RAW –¥–∞–Ω–Ω—ã–µ:", update.message.web_app_data.data)
        data = json.loads(update.message.web_app_data.data)

        if data.get('action') != 'create_booking':
            await update.message.reply_text("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞")
            return

        # –§–æ—Ä–º–∏—Ä—É–µ–º —á–∏—Ç–∞–±–µ–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ —É—Å–ª—É–≥
        services_text = ""
        if data.get('services'):
            services_text = "\n".join(
                f"‚Ä¢ {service['title']} - {service['price']} ‚Ç∏"
                for service in data['services']
            )

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message = (
            f"üéâ –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å!\n\n"
            f"üìÖ –î–∞—Ç–∞: {data['date']}\n"
            f"‚è∞ –í—Ä–µ–º—è: {data['time']}\n"
            f"üßë‚Äçüé® –ú–∞—Å—Ç–µ—Ä: {data['specialist']}\n"
            f"üè¢ –§–∏–ª–∏–∞–ª: {data['branch']}\n\n"
            f"üíà –£—Å–ª—É–≥–∏:\n{services_text}\n\n"
            f"üë§ –ö–ª–∏–µ–Ω—Ç:\n"
            f"‚Ä¢ –ò–º—è: {data['client']['name']}\n"
            f"‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: {data['client']['phone']}\n"
            f"‚Ä¢ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {data['client']['comment']}\n\n"
            f"üìå –ü—Ä–∞–≤–∏–ª–∞:\n"
            "1. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ–ø–∞–∑–¥—ã–≤–∞–π—Ç–µ\n"
            "2. –ü—Ä–∏ –æ–ø–æ–∑–¥–∞–Ω–∏–∏ –±–æ–ª–µ–µ 20 –º–∏–Ω—É—Ç –∑–∞–ø–∏—Å—å –∞–Ω–Ω—É–ª–∏—Ä—É–µ—Ç—Å—è\n"
            "3. –î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è'"
        )

        await update.message.reply_text(message)
        print("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç—É")

    except Exception as e:
        error_msg = f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"
        print(error_msg)
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø–∏—Å–∏")



# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–Ω–æ–ø–∫–∏ WebApp –≤ Telegram –º–µ–Ω—é
async def setup_webapp_menu_button(app):
    await app.bot.set_chat_menu_button(
        menu_button=MenuButtonWebApp(
            text="üíà –ó–∞–ø–∏—Å–∞—Ç—å—Å—è",
            web_app=WebAppInfo(url="https://barber-webapp-git-main-adams-projects-62b06f32.vercel.app")
        )
    )

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    TOKEN = "8112562910:AAHXA_yu1OEB-JG3Lzdxje0g8-LWyprOslI"
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_webapp_data))
    app.post_init = setup_webapp_menu_button

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()
