from telegram import Update, WebAppInfo, MenuButtonWebApp
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

# –°—Ç–∞—Ä—Ç
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É üíà *–ó–∞–ø–∏—Å–∞—Ç—å—Å—è* –≤ –ª–µ–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª—É.",
        parse_mode="Markdown"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.web_app_data:
        data = update.message.web_app_data.data
        try:
            import json
            result = json.loads(data)
            if "branch" in result:
                await update.message.reply_text(
                    f"‚úÖ –ó–∞–ø–∏—Å—å –ø—Ä–∏–Ω—è—Ç–∞!\nüìç –ê–¥—Ä–µ—Å: {result['branch']}"
                )
            else:
                await update.message.reply_text("‚ùå –ù–µ–ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.")
        except Exception as e:
            await update.message.reply_text("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö.")
    else:
        await update.message.reply_text("–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É üíà *–ó–∞–ø–∏—Å–∞—Ç—å—Å—è* —Å–ª–µ–≤–∞ –≤–Ω–∏–∑—É.", parse_mode="Markdown")

# –ö–Ω–æ–ø–∫–∞ WebApp –≤ –º–µ–Ω—é Telegram
async def setup_webapp_menu_button(app):
    await app.bot.set_chat_menu_button(
        menu_button=MenuButtonWebApp(
            text="üíà –ó–∞–ø–∏—Å–∞—Ç—å—Å—è",
            web_app=WebAppInfo(url="https://barber-indol-iota.vercel.app/")
        )
    )

# –ó–∞–ø—É—Å–∫
def main():
    TOKEN = "8112562910:AAHXA_yu1OEB-JG3Lzdxje0g8-LWyprOslI"
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.post_init = setup_webapp_menu_button

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()
