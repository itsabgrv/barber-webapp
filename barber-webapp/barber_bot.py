from telegram import Update, WebAppInfo, MenuButtonWebApp
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import json

# –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ó–∞–ø–∏—Å–∞—Ç—å—Å—è¬ª –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ WebApp
async def handle_webapp_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        print("üì® handle_webapp_data –≤—ã–∑–≤–∞–Ω")
        print("Raw update.message:", update.message)

        if update.message.web_app_data:
            print("‚úÖ web_app_data:", update.message.web_app_data.data)
            data = json.loads(update.message.web_app_data.data)
            print("üì¶ Parsed JSON:", data)

            message = (
                f"–ú–æ–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è üôåüèΩ –í—ã –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ {data['date']} –≤ {data['time']} ‚úÖ\n"
                f"–ú–∞—Å—Ç–µ—Ä: {data['specialist']}\n\n"
                f"–ü—Ä–∞–≤–∏–ª–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è:\n"
                " - –º—ã —Ü–µ–Ω–∏–º –≤—Ä–µ–º—è –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –Ω–∞–∫–ª–∞–¥–æ–∫ –±–æ–ª—å—à–∞—è –ø—Ä–æ—Å—å–±–∞ –Ω–µ –æ–ø–∞–∑–¥—ã–≤–∞—Ç—å.\n"
                " - –ü–æ—Å–ª–µ –∑–∞–¥–µ—Ä–∂–∫–∏ –±–æ–ª–µ–µ 20 –º–∏–Ω—É—Ç –º–∞—Å—Ç–µ—Ä –Ω–µ —Å–º–æ–∂–µ—Ç –≤–∞—Å –ø—Ä–∏–Ω—è—Ç—å.\n"
                " - –µ—Å–ª–∏ –≤—ã –≤—Å–µ –∂–µ –ø–æ–Ω—è–ª–∏, —á—Ç–æ –Ω–µ —É—Å–ø–µ–≤–∞–µ—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç–º–µ–Ω–∏—Ç–µ –∑–∞–ø–∏—Å—å –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É ¬´–∑–∞–ø–∏—Å–∞—Ç—å—Å—è¬ª"
            )

            await context.bot.send_message(chat_id=update.effective_chat.id, text=message)
        else:
            print("‚ùå –ù–µ—Ç web_app_data –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏")

    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞:", e)




# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–Ω–æ–ø–∫–∏ WebApp –≤ Telegram –º–µ–Ω—é
async def setup_webapp_menu_button(app):
    await app.bot.set_chat_menu_button(
        menu_button=MenuButtonWebApp(
            text="üíà –ó–∞–ø–∏—Å–∞—Ç—å—Å—è",
            web_app=WebAppInfo(url="https://barber-webapp-git-main-adams-projects-62b06f32.vercel.app")
        )
    )

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    TOKEN = "8112562910:AAHXA_yu1OEB-JG3Lzdxje0g8-LWyprOslI"
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_webapp_data))

    app.post_init = setup_webapp_menu_button

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()


if __name__ == "__main__":
    main()
