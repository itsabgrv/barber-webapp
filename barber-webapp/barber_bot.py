from telegram import Update, WebAppInfo, MenuButtonWebApp
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import json

TOKEN = "–¢–û–ö–ï–ù_–ë–û–¢–ê"

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è' –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞.")

async def handle_webapp_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print("üì• –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:", update.message)
    try:
        if update.message.web_app_data:
            print("‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ WebApp")
            data = json.loads(update.message.web_app_data.data)
            print("üì¶ –î–∞–Ω–Ω—ã–µ:", data)

            msg = (
                f"–í—ã –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ {data['date']} –≤ {data['time']}\n"
                f"–ú–∞—Å—Ç–µ—Ä: {data['specialist']}"
            )
            await context.bot.send_message(chat_id=update.effective_chat.id, text=msg)
        else:
            print("‚ùå web_app_data –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞:", e)

async def setup_menu(app):
    await app.bot.set_chat_menu_button(
        menu_button=MenuButtonWebApp(
            text="üíà –ó–∞–ø–∏—Å–∞—Ç—å—Å—è",
            web_app=WebAppInfo(url="https://barber-webapp-git-main-adams-projects-62b06f32.vercel.app")
        )
    )

def main():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & filters.ALL, handle_webapp_data))
    app.post_init = setup_menu
    app.run_polling()

if __name__ == "__main__":
    main()
