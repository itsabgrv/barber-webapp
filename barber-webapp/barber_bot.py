from telegram import Update, WebAppInfo, MenuButtonWebApp
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import json

TOKEN = "8112562910:AAHXA_yu1OEB-JG3Lzdxje0g8-LWyprOslI"

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è' –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞.")

async def handle_webapp_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not update.message:
        print("‚ö†Ô∏è –ù–µ—Ç update.message")
        return

    if not update.message.web_app_data:
        print("‚ö†Ô∏è –ù–µ—Ç web_app_data")
        return

    print("‚úÖ –ü–æ–ª—É—á–µ–Ω—ã web_app –¥–∞–Ω–Ω—ã–µ")
    try:
        data = json.loads(update.message.web_app_data.data)
        print("üì¶", data)

        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        services = data.get("services", [])
        services_text = "\n".join(f"‚Äî {s['title']} ({s['price']} ‚Ç∏)" for s in services) if services else "‚Äî"

        msg = (
            f"üôå –í—ã –∑–∞–ø–∏—Å–∞–ª–∏—Å—å!\n\n"
            f"üìÖ –î–∞—Ç–∞: {data.get('date')} –≤ {data.get('time')}\n"
            f"üë§ –ú–∞—Å—Ç–µ—Ä: {data.get('specialist')}\n"
            f"üìç –§–∏–ª–∏–∞–ª: {data.get('branch')}\n\n"
            f"üíº –£—Å–ª—É–≥–∏:\n{services_text}\n\n"
            f"üßë –ò–º—è: {data.get('name')}\n"
            f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {data.get('phone')}\n"
            f"‚úâÔ∏è Email: {data.get('email')}\n"
            f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {data.get('comment')}"
        )

        await context.bot.send_message(chat_id=update.effective_chat.id, text=msg)
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ:", e)

async def setup_menu(app):
    await app.bot.set_chat_menu_button(
        menu_button=MenuButtonWebApp(
            text="üíà –ó–∞–ø–∏—Å–∞—Ç—å—Å—è",
            web_app=WebAppInfo(url="https://barber-webapp-git-main-adams-projects-62b06f32.vercel.app/")
        )
    )
    print("‚úÖ –ö–Ω–æ–ø–∫–∞ –º–µ–Ω—é WebApp —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")

def main():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_webapp_data))
    app.post_init = setup_menu
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω, —Å–ª—É—à–∞–µ–º WebApp —Å–æ–±—ã—Ç–∏—è...")
    app.run_polling()

if __name__ == "__main__":
    main()
